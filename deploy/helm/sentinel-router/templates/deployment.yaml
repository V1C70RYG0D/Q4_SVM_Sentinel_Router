apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sentinel-router.fullname" . }}
  labels:
    {{- include "sentinel-router.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "sentinel-router.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sentinel-router.selectorLabels" . | nindent 8 }}
        version: {{ .Values.image.tag | default .Chart.AppVersion }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sentinel-router.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.spire.enabled }}
      initContainers:
      - name: spire-agent
        image: {{ .Values.spire.agentImage }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -e
          echo "Starting SPIRE agent with retry logic..."
          for i in 1 2 3; do
            if /opt/spire/bin/spire-agent run -config /opt/spire/conf/agent/agent.conf &
            sleep 5
            if [ -S /run/spire/sockets/agent.sock ]; then
              echo "SPIRE socket ready"
              exit 0
            fi
            fi
            echo "Retry $i/3 failed, waiting..."
            sleep $((2 ** (i - 1)))
          done
          exit 1
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
        - name: spire-config
          mountPath: /opt/spire/conf/agent
      - name: model-cacher
        image: busybox:1.36
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Caching ML models to tmpfs for fast access..."
          cp /app/models/mev_detection_model.onnx /dev/shm/models/
          echo "Model cached successfully"
        volumeMounts:
        - name: models
          mountPath: /app/models
        - name: tmpfs-models
          mountPath: /dev/shm/models
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: grpc
          containerPort: {{ .Values.config.api.grpcPort }}
          protocol: TCP
        - name: http
          containerPort: {{ .Values.config.api.port }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.config.api.metricsPort }}
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info"
        - name: MODEL_PATH
          value: {{ .Values.config.model.path }}
        - name: API_PORT
          value: {{ .Values.config.api.port | quote }}
        - name: GRPC_PORT
          value: {{ .Values.config.api.grpcPort | quote }}
        - name: METRICS_PORT
          value: {{ .Values.config.api.metricsPort | quote }}
        - name: HELIUS_RPC_URL
          value: {{ .Values.config.helius.rpcUrl }}
        - name: HELIUS_LASERSTREAM_URL
          value: {{ .Values.config.helius.laserstreamUrl }}
        - name: JITO_ENDPOINT
          value: {{ .Values.config.jito.endpoint }}
        - name: SOLANA_RPC_URL
          value: {{ .Values.config.solana.rpcUrl }}
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: {{ .Values.config.observability.otelEndpoint }}
        - name: OTEL_SERVICE_NAME
          value: {{ .Values.config.observability.otelServiceName }}
        {{- if .Values.externalSecrets.enabled }}
        - name: HELIUS_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "sentinel-router.fullname" . }}-helius-secrets
              key: helius_api_key
        - name: HELIUS_LASERSTREAM_X_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "sentinel-router.fullname" . }}-helius-secrets
              key: helius_laserstream_x_token
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: models
          mountPath: /app/models
          readOnly: true
        {{- if .Values.spire.enabled }}
        - name: tmpfs-models
          mountPath: /dev/shm/models
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /data
        {{- end }}
      volumes:
      - name: models
        configMap:
          name: {{ include "sentinel-router.fullname" . }}-models
      {{- if .Values.spire.enabled }}
      - name: tmpfs-models
        emptyDir:
          medium: Memory
          sizeLimit: 500Mi
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
      - name: spire-config
        configMap:
          name: {{ include "sentinel-router.fullname" . }}-spire-config
      {{- end }}
      {{- if .Values.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "sentinel-router.fullname" . }}-data
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
