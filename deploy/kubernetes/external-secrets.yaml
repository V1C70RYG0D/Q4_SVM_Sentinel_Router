# External Secrets Operator Configuration
# Integrates with HashiCorp Vault for secure secret management with auto-rotation

apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: sentinel-router

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: sentinel-router
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "sentinel-api"
          serviceAccountRef:
            name: sentinel-api

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sentinel-helius-secrets
  namespace: sentinel-router
spec:
  refreshInterval: 1h
  retryInterval: 30s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: sentinel-helius-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        helius_api_key: "{{ .helius_api_key }}"
        helius_laserstream_x_token: "{{ .helius_laserstream_x_token }}"
  data:
  - secretKey: helius_api_key
    remoteRef:
      key: sentinel/helius
      property: api_key
  - secretKey: helius_laserstream_x_token
    remoteRef:
      key: sentinel/helius
      property: laserstream_x_token

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sentinel-jito-secrets
  namespace: sentinel-router
spec:
  refreshInterval: 6h  # Auto-rotate every 6 hours
  retryInterval: 30s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: sentinel-jito-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        jito_auth_keypair: "{{ .jito_auth_keypair }}"
  data:
  - secretKey: jito_auth_keypair
    remoteRef:
      key: sentinel/jito
      property: auth_keypair

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sentinel-tls-certs
  namespace: sentinel-router
spec:
  refreshInterval: 24h
  retryInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: sentinel-tls-certs
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ .tls_crt }}"
        tls.key: "{{ .tls_key }}"
        ca.crt: "{{ .ca_crt }}"
  data:
  - secretKey: tls_crt
    remoteRef:
      key: sentinel/tls
      property: certificate
  - secretKey: tls_key
    remoteRef:
      key: sentinel/tls
      property: private_key
  - secretKey: ca_crt
    remoteRef:
      key: sentinel/tls
      property: ca_certificate

---
# Sealed Secrets for GitOps-safe secret management
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: sentinel-secrets-sealed
  namespace: sentinel-router
spec:
  encryptedData:
    # These are encrypted with kubeseal and safe to commit to git
    # Example: echo -n "secret-value" | kubeseal --raw --from-file=/dev/stdin --namespace sentinel-router --name sentinel-secrets
    helius_api_key: AgA... # Sealed value here
    helius_laserstream_x_token: AgB... # Sealed value here
  template:
    metadata:
      name: sentinel-secrets
      namespace: sentinel-router
    type: Opaque

---
# Vault Agent Injector for sidecar-based secret injection
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
  namespace: sentinel-router
data:
  vault-agent-config.hcl: |
    vault {
      address = "http://vault.vault.svc.cluster.local:8200"
    }
    
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "sentinel-api"
        }
      }
      
      sink "file" {
        config = {
          path = "/vault/secrets/token"
        }
      }
    }
    
    template {
      source = "/vault/configs/helius-template.tpl"
      destination = "/vault/secrets/helius-credentials"
    }
    
    template {
      source = "/vault/configs/jito-template.tpl"
      destination = "/vault/secrets/jito-credentials"
    }

---
# Example Vault policy for Sentinel Router
# Apply with: vault policy write sentinel-api sentinel-policy.hcl
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-policy
  namespace: sentinel-router
data:
  sentinel-policy.hcl: |
    # Read Helius credentials
    path "secret/data/sentinel/helius" {
      capabilities = ["read", "list"]
    }
    
    # Read Jito credentials
    path "secret/data/sentinel/jito" {
      capabilities = ["read", "list"]
    }
    
    # Read TLS certificates
    path "secret/data/sentinel/tls" {
      capabilities = ["read", "list"]
    }
    
    # Allow token renewal
    path "auth/token/renew-self" {
      capabilities = ["update"]
    }
    
    # Allow token lookup
    path "auth/token/lookup-self" {
      capabilities = ["read"]
    }
